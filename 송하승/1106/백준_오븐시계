package day1106;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class 백준_오븐시계 {

	public static void main(String[] args) throws IOException {
		// BufferedReader 클래스 객체 생성
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		String str = br.readLine(); // 한 줄 통으로 입력받기!! -> 무조건 문자열로 입력받아짐.

		// 방법 2 : StringTokenizer : String(문자열)을 토큰으로 Split할 수 있음. -> 배열을 쓸 필요가 없음.

		StringTokenizer st = new StringTokenizer(str); // StringTokenizer 클래스 객체 생성

		int A = Integer.parseInt(st.nextToken()); // 현재 [시각] A 입력
		int B = Integer.parseInt(st.nextToken()); // 현재 [분] B 입력
		// 두 번째 줄 입력 시에는 nextToken() 메서드를 쓰지 않는다.
		// 한 줄을 통으로 다시 입력받는다.
		int C = Integer.parseInt(br.readLine()); // 두 번째 줄에 요리하는데 필요한 시간 C 입력

		int ex_change = A * 60 + B; // 현재 시간을 [분]으로 환산
		int as_result = ex_change + C; // 현재 시간을 [분]으로 환산한 값 + C = 요리 후 변경된 시간

		int as_output1 = as_result / 60; // 변경 [시각] = 환산한 [시각]을 60으로 나눈 몫
		int as_output2 = as_result % 60; // 변경 [분] = 환산한 [분]을 60으로 나눈 나머지

		// 만약 변경 [시각]이 24 이상인 경우, 변경 [시각]에서 24를 뺀 값으로 초기화
		// 즉, 시는 0 ~ 23까지의 정수로만 이루어진다.
		if (as_output1 >= 24) {
			as_output1 -= 24;

		}

		System.out.println(as_output1 + " " + as_output2); // 변경 알람 [시각] 및 [분] 출력

	}

}
