package bakjoon_Q;

import java.util.Arrays;
import java.util.Scanner;

public class Seven_Dwarf {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in); // 입출력 함수

		int[] height = new int[9]; // 난쟁이들의 키 -> 배열로 나타냄.

		int sum = 0; // 일곱 난쟁이 키의 누적 합계

		for (int tc = 0; tc < height.length; tc++) { // 난쟁이들의 키 개수만큼 반복문을 돌려서,
			height[tc] = sc.nextInt(); // 난쟁이들의 키를 입력
			sum += height[tc]; // 누적 합계 = 일곱 난쟁이들의 키의 합

		}
		Arrays.sort(height); // 먼저, 키를 오름차순으로 정렬 => (백준 예제 입력 : 오름차순 : 7 8 10 13 15 19 20 23 25)

		int a = 0; // 정수 a 초기화
		int b = 0; // 정수 b 초기화

		// 브루트포스 알고리즘 - 탐색 알고리즘 (9c7)
		for (int i = 0; i < height.length - 1; i++) { // 배열에서 한 자리를 제외하고 반복문을 돌림.
			for (int j = i + 1; j < height.length; j++) { // 이 후, 다음 한자리를 제외하고 반복문을 돌려서 찾음.

				if (sum - (height[i] + height[j]) == 100) { // 누적 합계 - (i번째 난쟁이 키 + j번째 난쟁이 키) = 100
					a = i; // 정수 a에 i번째 난쟁이 키 저장
					b = j; // 정수 b에 j번째 난쟁이 키 저장
					break;

				}
			}
		}

		for (int k = 0; k < height.length; k++) { // 난쟁이의 키 만큼 반복문을 돌려서
			if (k == a || k == b) { // 난쟁이의 키가 a이거나 b이면
				continue; // 넘어가고, 다음 반복문을 실행한다.

			}
			System.out.println(height[k]); // 일곱 난쟁이들의 키 출력

		}
		sc.close(); // 입출력 함수 종료

	}

}
