package day_0126_prof2;

/**
 * BookManager 클래스를 이용하여 도서 객체 추가,삭제,조회하는 클래스
 */
public class BookTest {

	public static void main(String[] args) {

		// 도서 리스트를 유지하고 관리하는 BookManager 객체를 생성한다.
//		IBookManager bookManager = new BookManagerImpl();
		IBookManager bookManager = BookManagerImpl.getInstance();
		// BookManager 객체를 이용해 도서, 잡지 정보를 추가한다.

		bookManager.add(new Book("21424", "Java Pro", "김하나", "jaen.kr", 15000, "Java 기본 문법",1));
		bookManager.add(new Book("21425", "Java Pro2", "김하나", "jaen.kr", 25000, "Java 응용",1));
		bookManager.add(new Book("35355", "분석설계", "소나무", "jaen.kr", 30000, "SW 모델링",1));
		bookManager.add(new Magazine("45678", "월간 알고리즘", "홍길동", "jaen.kr", 10000, "1월 알고리즘", 2021, 1, 3));

		System.out.println("**********************도서 전체 목록**********************");
		for (Book b : bookManager.getList()) {
			System.out.println(b);
		}
//		bookManager = new BookManager();
		System.out.println("**********************일반 도서 목록**********************");
		for (Book b : bookManager.getBooks()) {
			System.out.println(b);
		}
		System.out.println("**********************잡지 목록**********************");
		for (Magazine b : bookManager.getMagazines()) {
			System.out.println(b);
		}
		System.out.println("**********************도서 제목 포함검색:Java**********************");
		for (Book b : bookManager.searchByTitle("Java")) { // 검색 결과 성공했을 때
			System.out.println(b);
		}

		if (bookManager.searchByTitle("Python").isEmpty()) {
			System.out.println("해당 검색어의 도서가 없습니다.");
		} else {
			for (Book b : bookManager.searchByTitle("Python")) {
				System.out.println(b);
			}
		}
		System.out.println("**********************ISBN 찾기*********************************");
		try {
			Book tmp = bookManager.searchByIsbn("35355");
			System.out.println(tmp);
		} catch (IsbnNotFoundException e) {
			System.out.println("해당 isbn을 검색할 수 없습니다.");
//			e.printStackTrace();
		} // ISBN 찾았을 경우

		try {
			Book tmp = bookManager.searchByIsbn("12345"); // ISBN 못 찾았을 때 오류 발생할 것..
			System.out.println(tmp);
		} catch (IsbnNotFoundException e) {
			System.out.println("해당 isbn을 검색할 수 없습니다.");
		}

		System.out.println("**********************ISBN 으로 삭제*********************************");
		try {
			bookManager.remove("35355");
		} catch (IsbnNotFoundException e) {
			System.out.println("해당 isbn을 검색할 수 없습니다.");
//			e.printStackTrace();
		}

		System.out.println("**********************도서 전체 목록**********************");
		for (Book b : bookManager.getList()) {
			System.out.println(b);
		}
//////////////////////////////////////////////////////////////////////////////////////////		
		System.out.println("**********************도서 구매**********************");
		try {
			bookManager.buy("21424", 10);
			System.out.println("구매완료");
		} catch (IsbnNotFoundException e) {
			System.out.println("존재하지 않는 도서입니다.");
//			e.printStackTrace();
		}
		System.out.println("**********************도서 전체 목록**********************");
		for (Book b : bookManager.getList()) {
			System.out.println(b);
		}
		
		System.out.println("**********************도서 판매**********************");
		try {
			bookManager.sell("21424", 100);
			System.out.println("판매완료");
		} catch (IsbnNotFoundException e) {
			System.out.println("존재하지 않는 도서입니다.");
//			e.printStackTrace();
		} catch (QuantityException e) {
			System.out.println("수량이 부족합니다.");
//			e.printStackTrace();
		}
		try {
			bookManager.sell("21424", 3);
			System.out.println("판매완료");
		} catch (IsbnNotFoundException e) {
			System.out.println("존재하지 않는 도서입니다.");
//			e.printStackTrace();
		} catch (QuantityException e) {
			System.out.println("수량이 부족합니다.");
//			e.printStackTrace();
		}
		
		System.out.println("**********************도서 전체 목록**********************");
		for (Book b : bookManager.getList()) {
			System.out.println(b);
		}
		System.out.println("도서 가격 총합 : " + bookManager.getTotalPrice());
		System.out.println("도서 가격 평균: " + bookManager.getPriceAvg());
	}
}
